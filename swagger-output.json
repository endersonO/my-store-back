{
  "swagger": "2.0",
  "info": {
    "title": "My API Store demo",
    "description": "Building a demo store portfolio",
    "contact": {
      "name": "Enderson Omana",
      "email": "omana.endersonj@gmail.com"
    },
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Please enter a valid token to test the requests below..."
    }
  },
  "paths": {
    "/users/": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get all users.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "description": "This route permit create a new user",
        "parameters": [
          {
            "name": "User Information",
            "in": "body",
            "description": "",
            "schema": {
              "required": [
                "User"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "example": "example@mail.com"
                },
                "password": {
                  "type": "string",
                  "example": "ax12XSA&ads"
                },
                "role": {
                  "type": "string",
                  "example": "customer"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "description": "This route permit update information about users, every field is optional",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "User Information",
            "in": "body",
            "description": "",
            "schema": {
              "required": [
                "User"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "example": "example@mail.com"
                },
                "role": {
                  "type": "string",
                  "example": "customer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/products/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/products/filter": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/categories/": {
      "get": {
        "tags": [
          "Category"
        ],
        "description": "this method get all categories",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "description": "this method create new categories only admin can create",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "token bearer in header",
            "required": true,
            "type": "string"
          },
          {
            "name": "Category Information",
            "in": "body",
            "description": "this required email and password",
            "schema": {
              "required": [
                "category information"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "category 1"
                },
                "image": {
                  "type": "string",
                  "example": "http://placeimg.com/640/480"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "description": "this method get one category with all product information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": [
          "Category"
        ],
        "description": "this method update fields categories only admin can update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "token bearer in header",
            "required": true,
            "type": "string"
          },
          {
            "name": "Category Information",
            "in": "body",
            "description": "this required optional fields like name or url",
            "schema": {
              "required": [
                "category information"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "category 1"
                },
                "image": {
                  "type": "string",
                  "example": "http://placeimg.com/640/480"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "description": "this method delete category field",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "token bearer in header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/customers/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/add-item": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "this method permit to user log",
        "parameters": [
          {
            "name": "Access Information",
            "in": "body",
            "description": "this required email and password",
            "schema": {
              "required": [
                "User"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "example": "example@mail.com"
                },
                "password": {
                  "type": "string",
                  "example": "ax12XSA&ads"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/recovery": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "this method permit to user reset password, sending an email with recovery link",
        "parameters": [
          {
            "name": "User email",
            "in": "body",
            "description": "this required User email",
            "schema": {
              "required": [
                "User"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "example": "example@mail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/change-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "this method changed user password",
        "parameters": [
          {
            "name": "Password Information",
            "in": "body",
            "description": "required temporal and unique use bearer token and new password",
            "schema": {
              "required": [
                "User"
              ],
              "properties": {
                "newPassword": {
                  "type": "string",
                  "example": "ax12XSA&ads"
                },
                "token": {
                  "type": "string",
                  "example": "aisdiuadsunu9da.d9ina9ndasnd.u21be7dass"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/profile/my-orders": {
      "get": {
        "tags": [
          "profile"
        ],
        "description": "this method get all orders user information require Json Web Token",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "token bearer in header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    }
  }
}